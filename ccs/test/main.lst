CCS PCH C Compiler, Version 5.008, 5967               05-mars-20 14:47

               Filename:   W:\Ephec\ElecDigitalProjet\ccs\test\main.lst

               ROM used:   214 bytes (1%)
                           Largest free fragment is 32554
               RAM used:   6 (0%) at main() level
                           12 (1%) worst case
               Stack used: 2 locations
               Stack size: 31

*
0000:  GOTO   0098
.................... #include <main.h> 
.................... #include <18F458.h> 
.................... //////// Standard Header file for the PIC18F458 device //////////////// 
.................... #device PIC18F458 
0004:  MOVF   0A,W
0006:  CLRF   01
0008:  SUBWF  09,W
000A:  BC    0012
000C:  MOVFF  09,00
0010:  BRA    002A
0012:  CLRF   00
0014:  MOVLW  08
0016:  MOVWF  0B
0018:  RLCF   09,F
001A:  RLCF   00,F
001C:  MOVF   0A,W
001E:  SUBWF  00,W
0020:  BTFSC  FD8.0
0022:  MOVWF  00
0024:  RLCF   01,F
0026:  DECFSZ 0B,F
0028:  BRA    0018
002A:  RETURN 0
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20MHz) 
*
0070:  CLRF   FEA
0072:  MOVLW  06
0074:  MOVWF  FE9
0076:  MOVF   FEF,W
0078:  BZ    0094
007A:  MOVLW  06
007C:  MOVWF  01
007E:  CLRF   00
0080:  DECFSZ 00,F
0082:  BRA    0080
0084:  DECFSZ 01,F
0086:  BRA    007E
0088:  MOVLW  7B
008A:  MOVWF  00
008C:  DECFSZ 00,F
008E:  BRA    008C
0090:  DECFSZ FEF,F
0092:  BRA    007A
0094:  GOTO   00C8 (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=0,rcv=0,bits=8,stream=PORT1) 
....................  
.................... #define LED PIN_None 
.................... #define DELAY 1000 
....................  
....................  
....................  
....................  
.................... int b_value; 
....................  
.................... int outputValueParser(int value){ 
*
002C:  CLRF   06
....................    int output = 0; 
....................    if (b_value < 10) { output = value;} 
002E:  MOVF   04,W
0030:  SUBLW  09
0032:  BNC   003A
0034:  MOVFF  05,06
0038:  BRA    0068
....................    else { 
....................     int x = value; 
003A:  MOVFF  05,07
....................     x = x%10; 
003E:  MOVFF  07,09
0042:  MOVLW  0A
0044:  MOVWF  0A
0046:  RCALL  0004
0048:  MOVFF  00,07
....................     int i = value; 
004C:  MOVFF  05,08
....................     i = i/10; 
0050:  MOVFF  08,09
0054:  MOVLW  0A
0056:  MOVWF  0A
0058:  RCALL  0004
005A:  MOVFF  01,08
....................      
....................     output = x + i*16; 
005E:  MOVF   08,W
0060:  MULLW  10
0062:  MOVF   FF3,W
0064:  ADDWF  07,W
0066:  MOVWF  06
....................    } 
....................    return output; 
0068:  MOVFF  06,01
006C:  GOTO   00B4 (RETURN)
.................... } 
....................  
.................... void main() 
*
0098:  CLRF   FF8
009A:  BCF    FD0.7
009C:  BSF    00.0
009E:  BSF    FC1.0
00A0:  BSF    FC1.1
00A2:  BSF    FC1.2
00A4:  BCF    FC1.3
00A6:  MOVLW  07
00A8:  MOVWF  FB4
.................... { 
....................    setup_low_volt_detect(FALSE); 
00AA:  CLRF   FD2
....................    b_value = 0; 
00AC:  CLRF   04
....................  
....................      
....................    while(true) 
....................    { 
....................    output_b( outputValueParser(b_value) ); 
00AE:  MOVFF  04,05
00B2:  BRA    002C
00B4:  CLRF   F93
00B6:  MOVFF  01,F8A
....................    output_high(PIN_E1); 
00BA:  BCF    F96.1
00BC:  BSF    F8D.1
....................    delay_ms(500); 
00BE:  MOVLW  02
00C0:  MOVWF  05
00C2:  MOVLW  FA
00C4:  MOVWF  06
00C6:  BRA    0070
00C8:  DECFSZ 05,F
00CA:  BRA    00C2
....................    output_low(PIN_E1); 
00CC:  BCF    F96.1
00CE:  BCF    F8D.1
....................    b_value++; 
00D0:  INCF   04,F
00D2:  BRA    00AE
....................     
....................    } 
....................  
.................... } 
....................  
00D4:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0C   PUT NOBROWNOUT BORV25 NOWDT WDT128
   Word  3: 0000  
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
