CCS PCH C Compiler, Version 5.008, 5967               07-mars-20 13:46

               Filename:   W:\Ephec\ElecDigitalProjet\ccs\test\main.lst

               ROM used:   246 bytes (1%)
                           Largest free fragment is 32522
               RAM used:   7 (0%) at main() level
                           13 (1%) worst case
               Stack used: 2 locations
               Stack size: 31

*
0000:  GOTO   00BA
.................... #include <main.h> 
.................... #include <18F458.h> 
.................... //////// Standard Header file for the PIC18F458 device //////////////// 
.................... #device PIC18F458 
*
0016:  MOVF   0B,W
0018:  CLRF   01
001A:  SUBWF  0A,W
001C:  BC    0024
001E:  MOVFF  0A,00
0022:  BRA    003C
0024:  CLRF   00
0026:  MOVLW  08
0028:  MOVWF  0C
002A:  RLCF   0A,F
002C:  RLCF   00,F
002E:  MOVF   0B,W
0030:  SUBWF  00,W
0032:  BTFSC  FD8.0
0034:  MOVWF  00
0036:  RLCF   01,F
0038:  DECFSZ 0C,F
003A:  BRA    002A
003C:  RETURN 0
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20MHz) 
*
0092:  CLRF   FEA
0094:  MOVLW  06
0096:  MOVWF  FE9
0098:  MOVF   FEF,W
009A:  BZ    00B6
009C:  MOVLW  06
009E:  MOVWF  01
00A0:  CLRF   00
00A2:  DECFSZ 00,F
00A4:  BRA    00A2
00A6:  DECFSZ 01,F
00A8:  BRA    00A0
00AA:  MOVLW  7B
00AC:  MOVWF  00
00AE:  DECFSZ 00,F
00B0:  BRA    00AE
00B2:  DECFSZ FEF,F
00B4:  BRA    009C
00B6:  GOTO   00F2 (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=0,rcv=0,bits=8,stream=PORT1) 
....................  
.................... #define LED PIN_None 
.................... #define DELAY 1000 
....................  
....................  
....................  
....................  
.................... #use fast_io(C) 
....................  
.................... #define trigger pin_C0 
.................... #define echo pin_C1 
....................  
.................... int b; 
.................... int time; 
....................  
.................... /* 
.................... * transofmation de la valeur en valeur base 16 
.................... */ 
.................... int outputValueParser(int value){ 
*
004E:  CLRF   07
....................    int output = 0; 
....................    if (b < 10) { output = value;} 
0050:  MOVF   04,W
0052:  SUBLW  09
0054:  BNC   005C
0056:  MOVFF  06,07
005A:  BRA    008A
....................    else { 
....................     int x = value; 
005C:  MOVFF  06,08
....................     x = x%10; 
0060:  MOVFF  08,0A
0064:  MOVLW  0A
0066:  MOVWF  0B
0068:  RCALL  0016
006A:  MOVFF  00,08
....................     int i = value; 
006E:  MOVFF  06,09
....................     i = i/10; 
0072:  MOVFF  09,0A
0076:  MOVLW  0A
0078:  MOVWF  0B
007A:  RCALL  0016
007C:  MOVFF  01,09
....................      
....................     output = x + i*16; 
0080:  MOVF   09,W
0082:  MULLW  10
0084:  MOVF   FF3,W
0086:  ADDWF  08,W
0088:  MOVWF  07
....................    } 
....................    return output; 
008A:  MOVFF  07,01
008E:  GOTO   00E6 (RETURN)
.................... } 
....................  
.................... /* 
.................... * récupération distance 
.................... */ 
.................... int parseDist(int dist){ 
....................   return dist/58; 
*
003E:  MOVFF  06,0A
0042:  MOVLW  3A
0044:  MOVWF  0B
0046:  RCALL  0016
0048:  MOVF   01,W
004A:  GOTO   00DC (RETURN)
.................... } 
....................  
.................... /* 
.................... * trigger de la sonde 
.................... */ 
.................... void triggerSonde(){ 
....................    output_high(trigger); 
*
0004:  BSF    F8B.0
....................    delay_us(10); 
0006:  MOVLW  10
0008:  MOVWF  00
000A:  DECFSZ 00,F
000C:  BRA    000A
000E:  NOP   
....................    output_low(trigger); 
0010:  BCF    F8B.0
0012:  GOTO   00D6 (RETURN)
.................... } 
....................  
.................... /* 
.................... * fonction principale 
.................... */ 
.................... void main() 
*
00BA:  CLRF   FF8
00BC:  BCF    FD0.7
00BE:  BSF    00.0
00C0:  BSF    FC1.0
00C2:  BSF    FC1.1
00C4:  BSF    FC1.2
00C6:  BCF    FC1.3
00C8:  MOVLW  07
00CA:  MOVWF  FB4
.................... { 
....................    setup_low_volt_detect(FALSE); 
00CC:  CLRF   FD2
....................    set_tris_c(0x01000000); // set RC1 as input (ECHO) 
00CE:  MOVLW  00
00D0:  MOVWF  F94
....................     
....................    while(true) 
....................    { 
....................    b = 0; 
00D2:  CLRF   04
....................     
....................    triggerSonde(); 
00D4:  BRA    0004
....................     
....................    while(echo == 0){} 
....................    while(echo == 1){ 
....................       time++; 
....................       delay_ms(1); 
....................    } 
....................     
....................    b = parseDist(time); 
00D6:  MOVFF  05,06
00DA:  BRA    003E
00DC:  MOVFF  01,04
....................     
....................    output_b(outputValueParser(b)); 
00E0:  MOVFF  04,06
00E4:  BRA    004E
00E6:  CLRF   F93
00E8:  MOVFF  01,F8A
....................    delay_ms(100); 
00EC:  MOVLW  64
00EE:  MOVWF  06
00F0:  BRA    0092
00F2:  BRA    00D2
....................    } 
....................  
.................... } 
....................  
00F4:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0C   PUT NOBROWNOUT BORV25 NOWDT WDT128
   Word  3: 0000  
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
